/** Code generated by EriLex */
package databook.edsl.googql;
public class Devaluate extends Visitor {
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDtime d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final Dactionuri d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDsel d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDfollow d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDmatch d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDnumber d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDback d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDend d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDstring d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionDinteger d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DactionHeadDnode d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DmatchTailDwith d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
	public java.lang.Object visit(
		final java.util.Stack<String> nodes, 
		final java.lang.Integer counter, 
		final java.util.Map<String,Class> selects, 
		final DqueryDuse d) {
		return new Evaluators().evaluate(d, 
			nodes, 
			counter, 
			selects);
	}
}
